# Den här är PyPerfScore-språkfilen för Svenska - Sverige (sv_SE).
# Om du förstår inte syntaxen av den här filen var så snäll och ändrar ingenting här!
# 
# Detta filen var skapat från Christian Lampe <kontakt@lampe2020.de>
{
    "ppsver": "0.3.5",
    "ppsver_warning": "Versionen av PyPerfScore som den importerade språkfilen har skapats för ({}) är inte programmversionen du användar nu ({}). Om PyPerfScore crashar eller visar meningslös text kan det vara därför.",
    "language": "sv_SE-BETA",
    "language_string": "Svenska - Sverige (BETA)",
    0: """Språket "{}" ({}) importerats framgångsrik!""",
    1: """Du användar PyPerfScore {}. För att få en nyare version, gå till "https://github.com/Stehlampe2020/PyPerfScore".""",
    2: "Kunde inte hitta egen versionsnummer! Sätta den till 0.0.0...",
    3: { # För debug()-klassen:
        0: "Minishell kallas med ogiltig argument för `advanced_minishell`: {} ({})",
        1: """
    PyPerfScore {}minishell help():
    Denna minishell är bara för felsökning.
    Den har ingen kommandohistorik (jag planera inte att tillfoga den) och kan ochså inte interpretar flerradexpressioner.
    De sista skulle vara onödig med exists(<string>), som ger
    → True tillbaka om en objekt med namnen <string> existerar och
    → False tillbaka om ingen objekt med namnen <string> existerar.
    {}""",
        2: "avancerade ",
        3: """
    Den avancerade minishell kan interpretera nyckelord men skriver inte bakgervärder (använd print() för det).
    """,
        4: """
    Nyckelord fungerar inte i den här minishell, använd avancerade minishellen för det.
    Avancerade minishellen kan startas med `debug.minishell("switching_shells", True)`.
    """,
        5: "Hmmm... Något skener har crashad (se utgav över den här raden för flera detailjer). Vilken tur att PyPerfScore kunde öppna minishellen efter felet:",
        6: "PyPerfScore bröts av (t.ex. med en KeyboardInterrupt). Här är en simpel felsökminishell för att inspektera allt:",
        7: "PyPerfScore fulländade att köra. Här är en simpel felsökminishell för att inspektera allt:",
        8: "\nDu kan gå tillbaka till den sista minishellen med att använda `exit()`.\nHär är den nya felsökminishellen:",
        9: "Ingen fail_status gavs till `debug.minishell()`!\n\nHur som helst, här är felsökminishellen:",
        10: "Felaktig fail_status gavs till `debug.minishell()`:\n{}\n{}\n\nHur som helst, här är minishellen:",
        11: """Flerradexpressioner (likna try...except...finally) och kommandohistorik fungerar inte i den här felsökminishellen.
För att lämna minishellen knappa in "exit()", för att få hjälp knappa in "help()".""",
        12: "Lämnar felsökminishellen...",
        13: "\nEn {} har upphöjats.\n{}",
        14: "Felsökminishellen ska öppna och genast stänga igen."
    },
    4: { # multiprocessing-specifisk text:
        0: "multithreading: Inte än implementerad!",
        1: "För att du gav ingen argument som bestämmer om PyPerfScore ska köra i enkel- eller flerkärnläge standarden ska laddas.",
        2: "Flerkärnläget existerar inte än, kör i standardläge istället..."
    },
    5: { # För argumentbehandling:
        0: "Hittade inga argumenter, kör nu i standardläge...",
        1: "Du gav ingen argument utan --debug argumenten, kör nu i standardläge men med felsöksminishell...",
        2: "{}: okänd argument! Ignorerar den..."
    },
    6: { # För testet sig själv:
        0: "Kör testet",
        1: "Din dator behövde {} sekunder för att tala från null till {} så snabb som möjlig.",
        2: "Så din dator har {} punkter."
    },
    7: { # Text för grafisk programmytan:
        0: "Startar grafisk programmyta...",
        1: {
            0: "Varning: tkinter kunde inte importeras! Installera tkinter ordentligt! Om du inde göra det kan PyPerfScore bara kör i kommandoytaläge (pyperfscore --cmdline).", # "kommandoytaläge"?! Jag är inte säker på detta ord. Jag måste kanske ändra på det...
            1: "tkinter saknas!",
        },
        2: "Grafisk programmytan är inte implementerad!",
        3: "PyPerfScoreGUI är inte implementerad!",
        4: "Tip: Grafisk programmytan är inte än implementerad! Jag ska bry om den när kommandoytalägen (pyperfscore --cmdline) är implementerad ordentligt."
    },
    8: { # For the error handling:
        0: """Din dator är för snabb för en målnummer av {} rundor. Kanske hjälper det om du förstorar målnummern "cycles"?""",
        1: "Flera moduler kunde inte importeras, följande text är de tekniska information om felet:",
        2: "En KeyboardInterrupt har upphöjats.",
        3: "En genast stop av PyPerfScore förfrågats (en SystemExit har upphöjats) med följande feltextet: {}",
        4: "En oväntad fel uppstod, följande text är de tekniska information om felet:"
    },
    9: "Avsluta PyPerfScore...",
    10: { # För uppdaterare:
        "dl_types": {
            0: "söket för en ny version",
            1: "nedladdningen av den nyaste version"
        },
        "conn_error": "En nätfel uppstod medan {}. Fel text: {}",
        0: "Du måste starta om PyPerfScore efter uppdateringen!",
        1: "En uppdatering är tillgängligt på webben! ({ver_old} → {ver_new}) Installerar...",
        2: "Versionen är redan installerat!",
        3: "Laddar ned... {}% - {}",
        4: "Färdig!",
        5: "Förfrågade versionen ({release}) kunde inte laddas ned för att den har ingen files.list!",
        6: "Kunde inte få versionssträngar, avslutar PyPerfScore..."
    },
    11: "Försök inte att föra en `debug`-objekt, klassen existerar bara för att gruppera felsöksfunktionerna!"
}
